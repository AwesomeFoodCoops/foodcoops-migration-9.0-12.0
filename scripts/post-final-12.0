#!/usr/bin/env python
from __future__ import print_function
import click
import click_odoo
from config import *

import logging
_logger = logging.getLogger(__name__)


def _apply_configs(env):
    '''
    Applies configurations needed in 12.0
    '''

    company_ids = env['res.company'].search([])
    pos_configs = env['pos.config'].search([])

    # Pos configurations
    for config in pos_configs:
        if config.pricelist_id:
            config.write(
                {
                    'use_pricelist': True,
                    'available_pricelist_ids': [(4, config.pricelist_id.id)],
                }
            )

    # web_m2x_options config
    param = env['ir.config_parameter'].sudo().set_param(
        'web_m2x_options.create', 'False')

    # Configure account_check_deposit to validate moves automatically
    company_ids.write({'check_deposit_post_move': True})

    # Set default report layout
    company_ids.write({
        'external_report_layout_id': env.ref('web.external_layout_boxed').id,
    })

    # New user group in pos_access_right. We set it to all pos users by default
    # https://www.druidoo.io/web#id=2085&action=367&model=project.task&view_type=form&menu_id=237
    user_ids = env['res.users'].search([])
    users_to_add = user_ids.filtered(
        lambda u: u.has_group('point_of_sale.group_pos_user'))
    group_id = env.ref('pos_access_right.group_payment')
    for user in users_to_add:
        _logger.info('Adding "%s" group to %s' % (group_id.name, user.name))
        user.write({"groups_id": [(4, group_id.id)]})


@click.command()
@click_odoo.env_options(default_log_level='error')
def main(env):
    _apply_configs(env)


if __name__ == '__main__':
    main()
